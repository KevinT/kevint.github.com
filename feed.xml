<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" hreflang="en" /><updated>2017-12-05T16:53:22+02:00</updated><id>http://localhost:4000/</id><title type="html">Kevin Trethewey</title><subtitle>I'm always interested in consulting and speaking opportunities internationally.  Please connect with me for this, or anything else you'd like to discuss.
</subtitle><author><name>Kevin Trethewey</name><email>kevint@gmail.com</email></author><entry><title type="html">I’m joining Jemstep by Invesco as their Technical Director</title><link href="http://localhost:4000/2017/12/04/jemstep/" rel="alternate" type="text/html" title="I'm joining Jemstep by Invesco as their Technical Director" /><published>2017-12-04T00:00:00+02:00</published><updated>2017-12-04T00:00:00+02:00</updated><id>http://localhost:4000/2017/12/04/jemstep</id><content type="html" xml:base="http://localhost:4000/2017/12/04/jemstep/">## How did that happen? 

I started Driven in 2008. Almost 10 years and 15 full time employees on and it's been a wonderful journey and experience. I've learned so much from all those that I had the privileged of collaborating with, inside Driven, at our clients, and within the wider software development community.

Aside from holding the space within Driven, in the last five years I've been focussing on effective team and organisational coaching. However, I didn't start coaching to be a coach. I wanted to learn about how work *actually* works. This year I became more and more aware that I had extracted a lot of the learning that I wanted. I had a feeling that it was becoming time for me to grow **awesome** software again.

Within Driven we've been through very challenging times. Half of the company emigrated (literally). These things happened at a rate that left us quite anaemically spread out across clients and battling to keep the connections between each other that made Driven a special place to work in the first place.

To counter this, we've been looking for product development opportunities that get us all working closely together again. Whilst on the journey to doing this ([Chaos Canary](http://chaoscanary.com) as an example), an opportunity at Jemstep came looking for me. After a lot of deliberation and consultation, I decided it was the right thing at the right time to take on. I'll discuss my plans in that regard further down.

## What will happen to Driven

Driven has a great reputation in our industry and clients who appreciate and support the work we've done. That will continue. Janco Wolmarans and Shanaaz Trethewey will be key in deciding where to take the company, based on their collective aspirations. They've both been an integral part of Driven's strategic decision making for years, and I'll still be advising and consulting them where needed, and asked.

The community event organisation capabilities will definitely keep strong. The annual unconference will *definitely* still happen. There will be more code retreats.

## Thank You Driveneers

I want to make a specific point of thanking each and every person who chose over the last decade to throw their lot in with Driven. I believe that every single person who joined Driven took more than they arrived with, in terms of learning and growth. They also each left behind more than they took. For me, this is the sign of a prosperous venture and, overall, a great success story.

In the last 10 years, as a collective we have...

* Grown, coached and participated in many great, and aspiring to be great software teams
* Helped many people grow a deeper understanding of how to make software together effectively
* Presented and taught at many local and international conferences
* Helped several software communities and conferences bootstrap themselves
* Brought out experienced international people to teach us and our community
* Taught resource-poor kids to code through [Sisonke Rising](http://sisonkerising.com)
* Started the [Team Tourism](http://teamtourism.directory) movement
* Organised, sponsored and facilitated &gt; 20 [Code Retreats](http://meetup.com/coderetreat)
* Started the annual [Drivenci](https://twitter.com/search?q=%23drivenci) unconference
* Launched (and recovered!) a telemetry-packed high altitude balloon
* Built several custom drones, including a 3d printed ocotocopter
* Built a 13 node Raspberry Pi cluster [for IBM Research](http://netdev.co.za/blog/pi-cluster-at-ibm-research-africa-south-africa-lab/)
* Launched [Chaos Canary](http://chaoscanary.com), a great product that helps dev teams avoid chaos in their production and development environments

...and so many more achievements over the years.

Wherever you find yourselves in the world today, from me personally: **Thank you.**

## My plans at Jemstep

[Jemstep](https://www.jemstep.com/en) has an amazing platform to grow from. They've built a product that customers are beating down their door to get. They're using technology that developers want to work with. They've well funded by a parent company that understands how important it is not to &quot;absorb them into the mother ship&quot;, and that lets them focus on building a great product.

From next year, I'm going to be helping them grow effectively. Together, we're going to grow *the best development house in the country* (many people agree they are there already, and just not great at getting the word out).

As we grow, we're [looking for people](https://www.jemstep.com/en/about-us/careers) with strong technical aptitude, who also want to bring their whole human selves to work with them. Passionate people who want to understand way beyond the code. 

Come grow something **awesome** with me.

&lt;br&gt;
Kevin</content><author><name>Kevin Trethewey</name><email>kevint@gmail.com</email></author><category term="jemstep" /><category term="driven" /><summary type="html">How did that happen? I started Driven in 2008. Almost 10 years and 15 full time employees on and it’s been a wonderful journey and experience. I’ve learned so much from all those that I had the privileged of collaborating with, inside Driven, at our clients, and within the wider software development community. Aside from holding the space within Driven, in the last five years I’ve been focussing on effective team and organisational coaching. However, I didn’t start coaching to be a coach. I wanted to learn about how work actually works. This year I became more and more aware that I had extracted a lot of the learning that I wanted. I had a feeling that it was becoming time for me to grow awesome software again. Within Driven we’ve been through very challenging times. Half of the company emigrated (literally). These things happened at a rate that left us quite anaemically spread out across clients and battling to keep the connections between each other that made Driven a special place to work in the first place. To counter this, we’ve been looking for product development opportunities that get us all working closely together again. Whilst on the journey to doing this (Chaos Canary as an example), an opportunity at Jemstep came looking for me. After a lot of deliberation and consultation, I decided it was the right thing at the right time to take on. I’ll discuss my plans in that regard further down. What will happen to Driven Driven has a great reputation in our industry and clients who appreciate and support the work we’ve done. That will continue. Janco Wolmarans and Shanaaz Trethewey will be key in deciding where to take the company, based on their collective aspirations. They’ve both been an integral part of Driven’s strategic decision making for years, and I’ll still be advising and consulting them where needed, and asked. The community event organisation capabilities will definitely keep strong. The annual unconference will definitely still happen. There will be more code retreats. Thank You Driveneers I want to make a specific point of thanking each and every person who chose over the last decade to throw their lot in with Driven. I believe that every single person who joined Driven took more than they arrived with, in terms of learning and growth. They also each left behind more than they took. For me, this is the sign of a prosperous venture and, overall, a great success story. In the last 10 years, as a collective we have… Grown, coached and participated in many great, and aspiring to be great software teams Helped many people grow a deeper understanding of how to make software together effectively Presented and taught at many local and international conferences Helped several software communities and conferences bootstrap themselves Brought out experienced international people to teach us and our community Taught resource-poor kids to code through Sisonke Rising Started the Team Tourism movement Organised, sponsored and facilitated &amp;gt; 20 Code Retreats Started the annual Drivenci unconference Launched (and recovered!) a telemetry-packed high altitude balloon Built several custom drones, including a 3d printed ocotocopter Built a 13 node Raspberry Pi cluster for IBM Research Launched Chaos Canary, a great product that helps dev teams avoid chaos in their production and development environments …and so many more achievements over the years. Wherever you find yourselves in the world today, from me personally: Thank you. My plans at Jemstep Jemstep has an amazing platform to grow from. They’ve built a product that customers are beating down their door to get. They’re using technology that developers want to work with. They’ve well funded by a parent company that understands how important it is not to “absorb them into the mother ship”, and that lets them focus on building a great product. From next year, I’m going to be helping them grow effectively. Together, we’re going to grow the best development house in the country (many people agree they are there already, and just not great at getting the word out). As we grow, we’re looking for people with strong technical aptitude, who also want to bring their whole human selves to work with them. Passionate people who want to understand way beyond the code. Come grow something awesome with me. Kevin</summary></entry><entry><title type="html">Collaborative Programming</title><link href="http://localhost:4000/2016/12/01/collaborativeprogramming/" rel="alternate" type="text/html" title="Collaborative Programming" /><published>2016-12-01T00:00:00+02:00</published><updated>2016-12-01T00:00:00+02:00</updated><id>http://localhost:4000/2016/12/01/collaborativeprogramming</id><content type="html" xml:base="http://localhost:4000/2016/12/01/collaborativeprogramming/">[Pair][pair] and [Mob programming][mob] practices are far more effective approaches to writing production software than individuals working alone.

The thing that slows delivery down the most is not the speed of creating new production code, but the *fragmented distribution of understanding* of the technical and business domains, in combination with how the code meets the needs/problem.

With collaborative methods of producing code, knowledge is combined, created and shared in context, resulting in

* Less work in progress and queues of half completed work
* Simpler, more effective solutions to problems.
* A huge percentage of bugs and defects never occur or are caught before immediately.
* The skill levels of the whole team are amplified and increased over time

These factors combine and compound, with the outcome that over time a team that is collaborating effectively will significantly outperform a group of people that is working in an isolated, divide-and-conquer approach.

[pair]: http://www.extremeprogramming.org/rules/pair.html
[mob]: https://leanpub.com/GettingStartedWithMobProgramming</content><author><name>Kevin Trethewey</name><email>kevint@gmail.com</email></author><category term="programming" /><category term="knowledge management" /><summary type="html">Pair and Mob programming practices are far more effective approaches to writing production software than individuals working alone. The thing that slows delivery down the most is not the speed of creating new production code, but the fragmented distribution of understanding of the technical and business domains, in combination with how the code meets the needs/problem. With collaborative methods of producing code, knowledge is combined, created and shared in context, resulting in Less work in progress and queues of half completed work Simpler, more effective solutions to problems. A huge percentage of bugs and defects never occur or are caught before immediately. The skill levels of the whole team are amplified and increased over time These factors combine and compound, with the outcome that over time a team that is collaborating effectively will significantly outperform a group of people that is working in an isolated, divide-and-conquer approach.</summary></entry><entry><title type="html">Getting tired of dealing with problems?</title><link href="http://localhost:4000/2014/10/17/problems/" rel="alternate" type="text/html" title="Getting tired of dealing with problems?" /><published>2014-10-17T00:00:00+02:00</published><updated>2014-10-17T00:00:00+02:00</updated><id>http://localhost:4000/2014/10/17/problems</id><content type="html" xml:base="http://localhost:4000/2014/10/17/problems/">What is the one thing in life you can be guaranteed of? 

**Change**. 

If you aren’t changing it means you are dead, so be happy about that. But when things change, that does that cause?

**Problems**.

As a smart person when you are faced with a problem you find...

**Solutions**!

Aaand what do solutions cause...? 

**Oops.**

As you can see, you will *always* have problems:

![image](/assets/img/blog/problem-loop.jpg)

The real question to ask is: Do you have the *right* problems?

For a new startup, battling with cashflow is the _right_ kind of problem to have. A company that has been around for 10 years and having cashflow issues is experiencing the _wrong_ problem.

Celebrate and embrace your right problems. Resist the urge sweep them under the rug or they will become wrong problems. When you find a genuine wrong problem, step back. Think about how the systems allowed that problem to happen and how the system could be changed to prevent it in future.

*Note: I first came across the change-problems-solutions loop via the work of [Izak Adizes][adizes]*

[adizes]: http://www.ichakadizes.com/</content><author><name>Kevin Trethewey</name><email>kevint@gmail.com</email></author><category term="systemic thinking" /><summary type="html">What is the one thing in life you can be guaranteed of? Change. If you aren’t changing it means you are dead, so be happy about that. But when things change, that does that cause? Problems. As a smart person when you are faced with a problem you find… Solutions! Aaand what do solutions cause…? Oops. As you can see, you will always have problems: The real question to ask is: Do you have the right problems? For a new startup, battling with cashflow is the right kind of problem to have. A company that has been around for 10 years and having cashflow issues is experiencing the wrong problem. Celebrate and embrace your right problems. Resist the urge sweep them under the rug or they will become wrong problems. When you find a genuine wrong problem, step back. Think about how the systems allowed that problem to happen and how the system could be changed to prevent it in future. Note: I first came across the change-problems-solutions loop via the work of Izak Adizes</summary></entry></feed>